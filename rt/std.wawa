func chex
ch i32 i32
	load ch
	i32 48
	i32.sub
	tee ch
	i32 10
	i32.lt_u
	if i32
		load ch
	else
		load ch
		i32 17
		i32.sub
		tee ch
		i32 6
		i32.ge_u
		if
			i32 -1
			load ch
			i32 32
			i32.sub
			tee ch
			i32 6
			i32.ge_u
			br_if @chex
			drop
		end
		load ch
		i32 10
		i32.add
	end

func pushstr
ch i32 tmpid i32 len i32 i32
str i32 cap i32 l1 i32
	load len
	i32 1
	i32.add
	tee l1
	load tmpid
	call nthtmp
	tee str
	i32.load 5
	tee cap
	i32.eq
	if
		load cap
		load cap
		i32.add
		tee cap
		call newstr
		load tmpid
		call nthtmp
		tee str
		load len
		i32 13
		i32.add
		call memcpy8

		load str
		load cap
		i32.store 5

		load str
		load tmpid
		call setnthtmp
	end

	load str
	load len
	i32.add
	load ch
	i32.store8 13
	load l1

func pushvec
o i32 tmpid i32 len i32 i32
vec i32 cap i32 l1 i32
	load len
	i32 4
	i32.add
	tee l1
	load tmpid
	call nthtmp
	tee vec
	i32.load 5
	tee cap
	i32.eq
	if
		load o
		storeg otmp

		load cap
		load cap
		i32.add
		tee cap
		call newvec
		load tmpid
		call nthtmp
		tee vec
		load len
		i32 9
		i32.add
		call memcpy8

		load vec
		load cap
		i32.store 5

		load vec
		load tmpid
		call setnthtmp

		loadg otmp
		store o
	end

	load vec
	load len
	i32.add
	load o
	i32.store 9
	load l1

func memcpy1rl
dst i32 src i32 len i32 void
	loop
		load len
		i32.eqz
		br_if 1

		load dst
		load len
		i32 1
		i32.sub
		tee len
		i32.add
		load src
		load len
		i32.add
		i32.load8_u 
		i32.store8

		br 0
	end

func memcpy8
dst i32 src i32 len i32 void
n i32
	loop
		load n
		load len
		i32.ge_u
		br_if 1

		load dst
		load n
		i32.add
		load src
		load n
		i32.add
		i64.load
		i64.store

		load n
		i32 8
		i32.add
		store n

		br 0
	end
