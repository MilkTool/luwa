tmppush = export('tmppush', func(i32, void, function(f, o)
	local n, p = f:locals(i32, 2)
	f:loadg(otmpstacklen)
	f:loadg(otmpstack)
	f:i32load(vec.len)
	f:eq()
	f:iff(function()
		f:load(o)
		f:storeg(otmp)

		f:loadg(otmpstacklen)
		f:loadg(otmpstacklen)
		f:add()
		f:tee(n)
		f:call(newvec)
		f:tee(p)

		f:load(p)
		f:loadg(otmpstack)
		f:loadg(otmpstacklen)
		f:i32(9)
		f:add()
		f:call(memcpy8)

		f:storeg(otmpstack)

		f:load(p)
		f:load(n)
		f:i32store(vec.len)

		f:loadg(otmp)
		f:store(o)
	end)
	f:loadg(otmpstack)
	f:loadg(otmpstacklen)
	f:add()
	f:load(o)
	f:i32store(vec.base)

	f:loadg(otmpstacklen)
	f:i32(4)
	f:add()
	f:storeg(otmpstacklen)
end))

tmppop = export('tmppop', func(function(f)
	f:loadg(otmpstacklen)
	f:i32(4)
	f:sub()
	f:storeg(otmpstacklen)

	f:loadg(otmpstack)
	f:loadg(otmpstacklen)
	f:add()
	f:i32(NIL)
	f:i32store(vec.base)
end))

nthtmp = export('nthtmp', func(i32, i32, function(f, i)
	f:loadg(otmpstack)
	f:loadg(otmpstacklen)
	f:load(i)
	f:i32(2)
	f:shl()
	f:sub()
	f:add()
	f:i32load(vec.base)
end))

setnthtmp = export('setnthtmp', func(i32, i32, void, function(f, nv, i)
	f:loadg(otmpstack)
	f:loadg(otmpstacklen)
	f:load(i)
	f:i32(2)
	f:shl()
	f:sub()
	f:add()
	f:load(nv)
	f:i32store(vec.base)
end))

alloca = export('alloca', func(i32, i32, function(f, sz)
	local oldcap, newcap, newdata = f:locals(i32, 3)
	f:loadg(odatastacklen)
	f:loadg(odatastacklen)
	f:loadg(odatastacklen)
	f:load(sz)
	f:add()
	f:storeg(odatastacklen)
	f:loadg(odatastack)
	f:i32load(str.len)
	f:tee(oldcap)
	f:geu()
	f:iff(function()
		f:load(oldcap)
		f:load(oldcap)
		f:add()
		f:tee(newcap)
		f:call(newstr)
		f:tee(newdata)
		f:loadg(odatastack)
		f:load(oldcap)
		f:i32(13)
		f:add()
		f:call(memcpy8)
		f:load(newdata)
		f:load(newcap)
		f:i32store(str.len)
		f:load(newdata)
		f:storeg(odatastack)
	end)
end))

dealloca = export('dealloca', func(i32, void, function(f, x)
	f:loadg(odatastacklen)
	f:load(x)
	f:sub()
	f:storeg(odatastacklen)
end))
